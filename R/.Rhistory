if (i == 1) {
primerdata.allspecies <- rbind(primerdata.allspecies,data)
} else{
primerdata.allspecies <- merge(primerdata.allspecies, data, all.x = TRUE, all.y = TRUE)
}
}
View(primerdata.allspecies)
primerdata.allspecies[is.na(primerdata.allspecies)] <- ""
# Add empty column and label column
primerdata.allspecies$` ` <- " "
primerdata.allspecies$"No." <- 1:nrow(primerdata.allspecies)
# Add Column for seawall and reef
primerdata.allspecies$type <- ifelse(grepl("Kusu", primerdata.allspecies$site) | grepl("Hantu", primerdata.allspecies$site) |
grepl("Sisters", primerdata.allspecies$site) | grepl("Sultan", primerdata.allspecies$site), "Reefs",
"Seawalls")
# Rearrange the columns
primerdata.allspecies.ord <- primerdata.allspecies %>%
select(No., "POR.SP.", POD.CRU:HYD.RIG, ` `, transect, site, depth, type)
View(primerdata.allspecies.ord)
unique(names(primerdata.allspecies.ord))
?mapply
# Do some checks on original data
check <- mapply(read_excel, file.name, sheet.name)
View(check)
check <- do.call(merge, check)
check <- do.call(rbind, check)
lapply(check, unique)
lapply(check, function(x) {unique(x[, "New Species ID"])})
do.call(rbind, lapply(check, function(x) {unique(x[, "New Species ID"])}))
unique.species <- do.call(rbind, lapply(check, function(x) {unique(x[, "New Species ID"])}))
unique(unique.species  )
print(unique(unique.species))
unique.species <- unique(do.call(rbind, lapply(check, function(x) {unique(x[, "New Species ID"])})))
View(unique.species)
?grep
lapply(check, function(x) {grep("Fungia sp", x[, "New Species ID"])})
grep("FUN", names(primerdata.allspecies.ord))
grep("NA", names(primerdata.allspecies.ord))
View(genus.key)
# Set up a genus key so as to convert genus names into their 3 letter short forms
genus <- c("Acanthastrea (ACA)", "Acropora (ACR)", "Alveopora (ALV)", "Anacropora (ANA)", "Astreopora (AST)",
"Caulastrea (CAU)", "Corallimorph (COM)", "Coscinaraea (COS)", "Ctenactis (CTE)", "Cyphastrea (CYP)",
"Diploastrea (DIP)", "Echinophyllia (ECL)", "Echinopora (ECH)", "Euphyllia (EUP)", "Favia (FAV)",
"Favites (FVS)", "Fungia (FUN)", "Galaxea (GAL)", "Gardineroseris (GAR)", "Goniastrea (GOS)",
"Goniopora (GON)", "Heliofungia (HEL)", "Herpolitha (HER)", "Hydnophora (HYD)", "Leptastrea (LER)",
"Leptoseris (LES)", "Lithophyllon (LIT)", "Lobophyllia (LOB)", "Madracis (MAD)", "Manicina (MAN)",
"Merulina (MER)", "Montipora (MON)", "Mycedium (MYC)", "Oulaphyllia (OUL)", "Oulastrea (OUR)",
"Oxypora (OXY)", "Pachyseris (PAC)", "Pavona (PAV)", "Pectinia (PEC)", "Physogyra (PHY)",
"Platygyra (PLA)", "Plerogyra (PLE)", "Plesiastrea (PLS)", "Pocillopora (POC)", "Podabacia (POD)",
"Polyphyllia (POL)", "Porites (POR)", "Psammocora (PSA)", "Pseudosiderastrea (PSE)", "Stylocoeniella (STL)",
"Symphyllia (SYM)", "Tubastrea (TUB)", "Turbinaria (TUR)", "Dipsastraea (DIS)", "Bernardpora (BER)",
"Cycloseris (CYC)", "Coelastrea (COE)", "Fimbriaphyllia (FIM)")
genus.long <- gsub("(\\w*).\\((\\w*)\\)", "\\1", genus)
genus.short <- gsub("(\\w*).\\((\\w*)\\)", "\\2", genus)
genus.key <- data.frame(genus.long, genus.short, stringsAsFactors = FALSE)
grep("NA", names(primerdata.allspecies.ord))
grep("TU", names(primerdata.allspecies.ord))
grep("TUB", names(primerdata.allspecies.ord))
View(primerdata.allspecies.ord[, c(42, 116:119)])
# Set up a genus key so as to convert genus names into their 3 letter short forms
genus <- c("Acanthastrea (ACA)", "Acropora (ACR)", "Alveopora (ALV)", "Anacropora (ANA)", "Astreopora (AST)",
"Caulastrea (CAU)", "Corallimorph (COM)", "Coscinaraea (COS)", "Ctenactis (CTE)", "Cyphastrea (CYP)",
"Diploastrea (DIP)", "Echinophyllia (ECL)", "Echinopora (ECH)", "Euphyllia (EUP)", "Favia (FAV)",
"Favites (FVS)", "Fungia (FUN)", "Galaxea (GAL)", "Gardineroseris (GAR)", "Goniastrea (GOS)",
"Goniopora (GON)", "Heliofungia (HEL)", "Herpolitha (HER)", "Hydnophora (HYD)", "Leptastrea (LER)",
"Leptoseris (LES)", "Lithophyllon (LIT)", "Lobophyllia (LOB)", "Madracis (MAD)", "Manicina (MAN)",
"Merulina (MER)", "Montipora (MON)", "Mycedium (MYC)", "Oulaphyllia (OUL)", "Oulastrea (OUR)",
"Oxypora (OXY)", "Pachyseris (PAC)", "Pavona (PAV)", "Pectinia (PEC)", "Physogyra (PHY)",
"Platygyra (PLA)", "Plerogyra (PLE)", "Plesiastrea (PLS)", "Pocillopora (POC)", "Podabacia (POD)",
"Polyphyllia (POL)", "Porites (POR)", "Psammocora (PSA)", "Pseudosiderastrea (PSE)", "Stylocoeniella (STL)",
"Symphyllia (SYM)", "Tubastraea (TUB)", "Turbinaria (TUR)", "Dipsastraea (DIS)", "Bernardpora (BER)",
"Cycloseris (CYC)", "Coelastrea (COE)", "Fimbriaphyllia (FIM)")
genus.long <- gsub("(\\w*).\\((\\w*)\\)", "\\1", genus)
genus.short <- gsub("(\\w*).\\((\\w*)\\)", "\\2", genus)
genus.key <- data.frame(genus.long, genus.short, stringsAsFactors = FALSE)
grep("NA", names(primerdata.allspecies.ord))
View(genus.key)
grep("OUL", names(primerdata.allspecies.ord))
View(primerdata.allspecies.ord[, c(25, 116:119)])
?read_excel
primerdata.allspecies <- data.frame()
for (i in seq_along(file.name)) {
df <- read_excel(file.name[i],
sheet = sheet.name[i])
# Only take hard coral benthic communities
df <- df[df$`Benthic Cat.`== "HC" | df$`Benthic Cat.` == "HC'",]
# Remove empty row between every transect
if (length(which(is.na(df$Site)))!= 0) {
df <- df[-which(is.na(df$Site)),]
}
# Cleaning the new species ID into genus and species identifiers (xxx.xxx)
df$`New Species ID` <- trimws(df$`New Species ID`)
tmp.gen <- gsub("(.*?) (.*)", "\\1", df$`New Species ID`)
tmp.gen <- genus.key[match(toupper(tmp.gen), toupper(genus.key$genus.long)), "genus.short"]
tmp.spc <- toupper(gsub("(.*?) (.{3}).*", "\\2", df$`New Species ID`))
df$`New Species ID` <- paste0(tmp.gen, ".", tmp.spc)
# Random data clean-ups go here
if (grepl("Semakau", file.name[i])){
df[is.na(df$`Transect #`), "Transect #"] <- 5
}
# Some files have inconsistent site names. Fix those
if (length(unique(df$Site))!= 1){
df$Site <- df$Site[1]
}
if (length(unique(df$Depth))!=1){
df$Depth <- df$Depth[1]
}
sitename <- unique(df$Site)
depth <- unique(df$Depth)
# Summarize the data needed
temp <- df %>%
group_by(transect = `Transect #`, species = `New Species ID`) %>%
summarise(length = sum(Length))
# Melt it into a matrix
data <- dcast(temp, transect ~ species, value.var = "length")
data$site <- sitename
data$depth <- depth
data[is.na(data)] <- ""
# For the first obs, use rbind. Subsequently merge the dataset
if (i == 1) {
primerdata.allspecies <- rbind(primerdata.allspecies,data)
} else{
primerdata.allspecies <- merge(primerdata.allspecies, data, all.x = TRUE, all.y = TRUE)
}
}
primerdata.allspecies[is.na(primerdata.allspecies)] <- ""
# Add empty column and label column
primerdata.allspecies$` ` <- " "
primerdata.allspecies$"No." <- 1:nrow(primerdata.allspecies)
# Add Column for seawall and reef
primerdata.allspecies$type <- ifelse(grepl("Kusu", primerdata.allspecies$site) | grepl("Hantu", primerdata.allspecies$site) |
grepl("Sisters", primerdata.allspecies$site) | grepl("Sultan", primerdata.allspecies$site), "Reefs",
"Seawalls")
# Rearrange the columns
primerdata.allspecies.ord <- primerdata.allspecies %>%
select(No., "POR.SP.", POD.CRU:HYD.RIG, ` `, transect, site, depth, type)
View(primerdata.allspecies.ord)
file.name
df <- df <- read_excel(file.name[9],
sheet = sheet.name[9])
# Only take hard coral benthic communities
df <- df[df$`Benthic Cat.`== "HC" | df$`Benthic Cat.` == "HC'",]
# Cleaning the new species ID into genus and species identifiers (xxx.xxx)
tmp.gen <- gsub("(.*?) (.*)", "\\1", df$`New Species ID`)
tmp.gen <- genus.key[match(toupper(tmp.gen), toupper(genus.key$genus.long)), "genus.short"]
tmp.spc <- toupper(gsub("(.*?) (.{3}).*", "\\2", df$`New Species ID`))
df$`New Species ID` <- paste0(tmp.gen, ".", tmp.spc)
View(df)
primerdata.allspecies <- data.frame()
for (i in seq_along(file.name)) {
df <- read_excel(file.name[i],
sheet = sheet.name[i])
# Only take hard coral benthic communities
df <- df[df$`Benthic Cat.`== "HC" | df$`Benthic Cat.` == "HC'",]
# Remove empty row between every transect
if (length(which(is.na(df$Site)))!= 0) {
df <- df[-which(is.na(df$Site)),]
}
# Cleaning the new species ID into genus and species identifiers (xxx.xxx)
tmp.gen <- gsub("(.*?) (.*)", "\\1", df$`New Species ID`)
tmp.gen <- genus.key[match(toupper(tmp.gen), toupper(genus.key$genus.long)), "genus.short"]
tmp.spc <- toupper(gsub("(.*?) (.{3}).*", "\\2", df$`New Species ID`))
df$`New Species ID` <- paste0(tmp.gen, ".", tmp.spc)
# Random data clean-ups go here
if (grepl("Semakau", file.name[i])){
df[is.na(df$`Transect #`), "Transect #"] <- 5
}
# Some files have inconsistent site names. Fix those
if (length(unique(df$Site))!= 1){
df$Site <- df$Site[1]
}
if (length(unique(df$Depth))!=1){
df$Depth <- df$Depth[1]
}
sitename <- unique(df$Site)
depth <- unique(df$Depth)
# Summarize the data needed
temp <- df %>%
group_by(transect = `Transect #`, species = `New Species ID`) %>%
summarise(length = sum(Length))
# Melt it into a matrix
data <- dcast(temp, transect ~ species, value.var = "length")
data$site <- sitename
data$depth <- depth
data[is.na(data)] <- ""
# For the first obs, use rbind. Subsequently merge the dataset
if (i == 1) {
primerdata.allspecies <- rbind(primerdata.allspecies,data)
} else{
primerdata.allspecies <- merge(primerdata.allspecies, data, all.x = TRUE, all.y = TRUE)
}
}
primerdata.allspecies[is.na(primerdata.allspecies)] <- ""
# Add empty column and label column
primerdata.allspecies$` ` <- " "
primerdata.allspecies$"No." <- 1:nrow(primerdata.allspecies)
# Add Column for seawall and reef
primerdata.allspecies$type <- ifelse(grepl("Kusu", primerdata.allspecies$site) | grepl("Hantu", primerdata.allspecies$site) |
grepl("Sisters", primerdata.allspecies$site) | grepl("Sultan", primerdata.allspecies$site), "Reefs",
"Seawalls")
# Rearrange the columns
primerdata.allspecies.ord <- primerdata.allspecies %>%
select(No., "POR.SP.", POD.CRU:HYD.RIG, ` `, transect, site, depth, type)
# Do some checks on original data
check <- mapply(read_excel, file.name, sheet.name)
unique.species <- unique(do.call(rbind, lapply(check, function(x) {unique(x[, "New Species ID"])})))
lapply(check, function(x) {grep("Fungia sp", x[, "New Species ID"])})
View(unique.species)
View(primerdata.allspecies.ord)
grep("NA", names(primerdata.allspecies.ord))
# Set up a genus key so as to convert genus names into their 3 letter short forms
genus <- c("Acanthastrea (ACA)", "Acropora (ACR)", "Alveopora (ALV)", "Anacropora (ANA)", "Astreopora (AST)",
"Caulastrea (CAU)", "Corallimorph (COM)", "Coscinaraea (COS)", "Ctenactis (CTE)", "Cyphastrea (CYP)",
"Diploastrea (DIP)", "Echinophyllia (ECL)", "Echinopora (ECH)", "Euphyllia (EUP)", "Favia (FAV)",
"Favites (FVS)", "Fungia (FUN)", "Galaxea (GAL)", "Gardineroseris (GAR)", "Goniastrea (GOS)",
"Goniopora (GON)", "Heliofungia (HEL)", "Herpolitha (HER)", "Hydnophora (HYD)", "Leptastrea (LER)",
"Leptoseris (LES)", "Lithophyllon (LIT)", "Lobophyllia (LOB)", "Madracis (MAD)", "Manicina (MAN)",
"Merulina (MER)", "Montipora (MON)", "Mycedium (MYC)", "Oulophyllia (OUL)", "Oulastrea (OUR)",
"Oxypora (OXY)", "Pachyseris (PAC)", "Pavona (PAV)", "Pectinia (PEC)", "Physogyra (PHY)",
"Platygyra (PLA)", "Plerogyra (PLE)", "Plesiastrea (PLS)", "Pocillopora (POC)", "Podabacia (POD)",
"Polyphyllia (POL)", "Porites (POR)", "Psammocora (PSA)", "Pseudosiderastrea (PSE)", "Stylocoeniella (STL)",
"Symphyllia (SYM)", "Tubastraea (TUB)", "Turbinaria (TUR)", "Dipsastraea (DIS)", "Bernardpora (BER)",
"Cycloseris (CYC)", "Coelastrea (COE)", "Fimbriaphyllia (FIM)")
genus.long <- gsub("(\\w*).\\((\\w*)\\)", "\\1", genus)
genus.short <- gsub("(\\w*).\\((\\w*)\\)", "\\2", genus)
genus.key <- data.frame(genus.long, genus.short, stringsAsFactors = FALSE)
primerdata.allspecies <- data.frame()
for (i in seq_along(file.name)) {
df <- read_excel(file.name[i],
sheet = sheet.name[i])
# Only take hard coral benthic communities
df <- df[df$`Benthic Cat.`== "HC" | df$`Benthic Cat.` == "HC'",]
# Remove empty row between every transect
if (length(which(is.na(df$Site)))!= 0) {
df <- df[-which(is.na(df$Site)),]
}
# Cleaning the new species ID into genus and species identifiers (xxx.xxx)
tmp.gen <- gsub("(.*?) (.*)", "\\1", df$`New Species ID`)
tmp.gen <- genus.key[match(toupper(tmp.gen), toupper(genus.key$genus.long)), "genus.short"]
tmp.spc <- toupper(gsub("(.*?) (.{3}).*", "\\2", df$`New Species ID`))
df$`New Species ID` <- paste0(tmp.gen, ".", tmp.spc)
# Random data clean-ups go here
if (grepl("Semakau", file.name[i])){
df[is.na(df$`Transect #`), "Transect #"] <- 5
}
# Some files have inconsistent site names. Fix those
if (length(unique(df$Site))!= 1){
df$Site <- df$Site[1]
}
if (length(unique(df$Depth))!=1){
df$Depth <- df$Depth[1]
}
sitename <- unique(df$Site)
depth <- unique(df$Depth)
# Summarize the data needed
temp <- df %>%
group_by(transect = `Transect #`, species = `New Species ID`) %>%
summarise(length = sum(Length))
# Melt it into a matrix
data <- dcast(temp, transect ~ species, value.var = "length")
data$site <- sitename
data$depth <- depth
data[is.na(data)] <- ""
# For the first obs, use rbind. Subsequently merge the dataset
if (i == 1) {
primerdata.allspecies <- rbind(primerdata.allspecies,data)
} else{
primerdata.allspecies <- merge(primerdata.allspecies, data, all.x = TRUE, all.y = TRUE)
}
}
primerdata.allspecies[is.na(primerdata.allspecies)] <- ""
# Add empty column and label column
primerdata.allspecies$` ` <- " "
primerdata.allspecies$"No." <- 1:nrow(primerdata.allspecies)
# Add Column for seawall and reef
primerdata.allspecies$type <- ifelse(grepl("Kusu", primerdata.allspecies$site) | grepl("Hantu", primerdata.allspecies$site) |
grepl("Sisters", primerdata.allspecies$site) | grepl("Sultan", primerdata.allspecies$site), "Reefs",
"Seawalls")
# Rearrange the columns
primerdata.allspecies.ord <- primerdata.allspecies %>%
select(No., "POR.SP.", POD.CRU:HYD.RIG, ` `, transect, site, depth, type)
grep("NA", names(primerdata.allspecies.ord))
primerdata.allspecies <- data.frame()
for (i in seq_along(file.name)) {
df <- read_excel(file.name[i],
sheet = sheet.name[i])
# Only take hard coral benthic communities
df <- df[df$`Benthic Cat.`== "HC" | df$`Benthic Cat.` == "HC'",]
# Remove empty row between every transect
if (length(which(is.na(df$Site)))!= 0) {
df <- df[-which(is.na(df$Site)),]
}
# Cleaning the new species ID into genus and species identifiers (xxx.xxx)
tmp.gen <- gsub("(.*?) (.*)", "\\1", df$`New Species ID`)
tmp.gen <- genus.key[match(toupper(tmp.gen), toupper(genus.key$genus.long)), "genus.short"]
tmp.spc <- toupper(gsub("(.*?) (.{3}).*", "\\2", df$`New Species ID`))
df$`New Species ID` <- paste0(tmp.gen, ".", tmp.spc)
# Random data clean-ups go here
if (grepl("Semakau", file.name[i])){
df[is.na(df$`Transect #`), "Transect #"] <- 5
}
# Some files have inconsistent site names. Fix those
if (length(unique(df$Site))!= 1){
df$Site <- df$Site[1]
}
if (length(unique(df$Depth))!=1){
df$Depth <- df$Depth[1]
}
sitename <- unique(df$Site)
depth <- unique(df$Depth)
# Summarize the data needed
temp <- df %>%
group_by(transect = `Transect #`, species = `New Species ID`) %>%
summarise(length = sum(Length))
# Melt it into a matrix
data <- dcast(temp, transect ~ species, value.var = "length")
data$site <- sitename
data$depth <- depth
data[is.na(data)] <- ""
# For the first obs, use rbind. Subsequently merge the dataset
if (i == 1) {
primerdata.allspecies <- rbind(primerdata.allspecies,data)
} else{
primerdata.allspecies <- merge(primerdata.allspecies, data, all.x = TRUE, all.y = TRUE)
}
}
primerdata.allspecies[is.na(primerdata.allspecies)] <- ""
# Add empty column and label column
primerdata.allspecies$` ` <- " "
primerdata.allspecies$"No." <- 1:nrow(primerdata.allspecies)
# Add Column for seawall and reef
primerdata.allspecies$type <- ifelse(grepl("Kusu", primerdata.allspecies$site) | grepl("Hantu", primerdata.allspecies$site) |
grepl("Sisters", primerdata.allspecies$site) | grepl("Sultan", primerdata.allspecies$site), "Reefs",
"Seawalls")
# Rearrange the columns
primerdata.allspecies.ord <- primerdata.allspecies %>%
select(No., "POR.SP.", POD.CRU:HYD.RIG, ` `, transect, site, depth, type)
grep("NA", names(primerdata.allspecies.ord))
primerdata.allspecies <- data.frame()
for (i in seq_along(file.name)) {
df <- read_excel(file.name[i],
sheet = sheet.name[i])
# Only take hard coral benthic communities
df <- df[df$`Benthic Cat.`== "HC" | df$`Benthic Cat.` == "HC'",]
# Remove empty row between every transect
if (length(which(is.na(df$Site)))!= 0) {
df <- df[-which(is.na(df$Site)),]
}
# Cleaning the new species ID into genus and species identifiers (xxx.xxx)
tmp.gen <- gsub("(.*?) (.*)", "\\1", df$`New Species ID`)
tmp.gen <- genus.key[match(toupper(tmp.gen), toupper(genus.key$genus.long)), "genus.short"]
tmp.spc <- toupper(gsub("(.*?) (.{3}).*", "\\2", df$`New Species ID`))
df$`New Species ID` <- paste0(tmp.gen, ".", tmp.spc)
# Random data clean-ups go here
if (grepl("Semakau", file.name[i])){
df[is.na(df$`Transect #`), "Transect #"] <- 5
}
# Some files have inconsistent site names. Fix those
if (length(unique(df$Site))!= 1){
df$Site <- df$Site[1]
}
if (length(unique(df$Depth))!=1){
df$Depth <- df$Depth[1]
}
sitename <- unique(df$Site)
depth <- unique(df$Depth)
# Summarize the data needed
temp <- df %>%
group_by(transect = `Transect #`, species = `New Species ID`) %>%
summarise(length = sum(Length))
# Melt it into a matrix
data <- dcast(temp, transect ~ species, value.var = "length")
data$site <- sitename
data$depth <- depth
data[is.na(data)] <- ""
# For the first obs, use rbind. Subsequently merge the dataset
if (i == 1) {
primerdata.allspecies <- rbind(primerdata.allspecies,data)
} else{
primerdata.allspecies <- merge(primerdata.allspecies, data, all.x = TRUE, all.y = TRUE)
}
}
primerdata.allspecies[is.na(primerdata.allspecies)] <- ""
# Add empty column and label column
primerdata.allspecies$` ` <- " "
primerdata.allspecies$"No." <- 1:nrow(primerdata.allspecies)
# Add Column for seawall and reef
primerdata.allspecies$type <- ifelse(grepl("Kusu", primerdata.allspecies$site) | grepl("Hantu", primerdata.allspecies$site) |
grepl("Sisters", primerdata.allspecies$site) | grepl("Sultan", primerdata.allspecies$site), "Reefs",
"Seawalls")
# Rearrange the columns
primerdata.allspecies.ord <- primerdata.allspecies %>%
select(No., "POR.SP.", POD.CRU:HYD.RIG, ` `, transect, site, depth, type)
grep("NA", names(primerdata.allspecies.ord))
primerdata.allspecies <- data.frame()
for (i in seq_along(file.name)) {
df <- read_excel(file.name[i],
sheet = sheet.name[i])
# Only take hard coral benthic communities
df <- df[df$`Benthic Cat.`== "HC" | df$`Benthic Cat.` == "HC'",]
# Remove empty row between every transect
if (length(which(is.na(df$Site)))!= 0) {
df <- df[-which(is.na(df$Site)),]
}
# Cleaning the new species ID into genus and species identifiers (xxx.xxx)
tmp.gen <- gsub("(.*?) (.*)", "\\1", df$`New Species ID`)
tmp.gen <- genus.key[match(toupper(tmp.gen), toupper(genus.key$genus.long)), "genus.short"]
tmp.spc <- toupper(gsub("(.*?) (.{3}).*", "\\2", df$`New Species ID`))
df$`New Species ID` <- paste0(tmp.gen, ".", tmp.spc)
# Random data clean-ups go here
if (grepl("Semakau", file.name[i])){
df[is.na(df$`Transect #`), "Transect #"] <- 5
}
# Some files have inconsistent site names. Fix those
if (length(unique(df$Site))!= 1){
df$Site <- df$Site[1]
}
if (length(unique(df$Depth))!=1){
df$Depth <- df$Depth[1]
}
sitename <- unique(df$Site)
depth <- unique(df$Depth)
# Summarize the data needed
temp <- df %>%
group_by(transect = `Transect #`, species = `New Species ID`) %>%
summarise(length = sum(Length))
# Melt it into a matrix
data <- dcast(temp, transect ~ species, value.var = "length")
data$site <- sitename
data$depth <- depth
data[is.na(data)] <- ""
# For the first obs, use rbind. Subsequently merge the dataset
if (i == 1) {
primerdata.allspecies <- rbind(primerdata.allspecies,data)
} else{
primerdata.allspecies <- merge(primerdata.allspecies, data, all.x = TRUE, all.y = TRUE)
}
}
primerdata.allspecies[is.na(primerdata.allspecies)] <- ""
# Add empty column and label column
primerdata.allspecies$` ` <- " "
primerdata.allspecies$"No." <- 1:nrow(primerdata.allspecies)
# Add Column for seawall and reef
primerdata.allspecies$type <- ifelse(grepl("Kusu", primerdata.allspecies$site) | grepl("Hantu", primerdata.allspecies$site) |
grepl("Sisters", primerdata.allspecies$site) | grepl("Sultan", primerdata.allspecies$site), "Reefs",
"Seawalls")
# Rearrange the columns
primerdata.allspecies.ord <- primerdata.allspecies %>%
select(No., "POR.SP.", POD.CRU:HYD.RIG, ` `, transect, site, depth, type)
grep("NA", names(primerdata.allspecies.ord))
primerdata.allspecies.ord <- primerdata.allspecies.ord[, -grep("NA", names(primerdata.allspecies.ord))]
grep("NA", names(primerdata.allspecies.ord)
)
grep("NA", names(primerdata.allspecies.ord))
write.xlsx(primerdata.allspecies.ord, "../primerdata_allspecies.xlsx", row.names = FALSE)
primerdata.allspecies <- data.frame()
for (i in seq_along(file.name)) {
df <- read_excel(file.name[i],
sheet = sheet.name[i])
# Only take hard coral benthic communities
df <- df[df$`Benthic Cat.`== "HC" | df$`Benthic Cat.` == "HC'",]
# Remove empty row between every transect
if (length(which(is.na(df$Site)))!= 0) {
df <- df[-which(is.na(df$Site)),]
}
# Cleaning the new species ID into genus and species identifiers (xxx.xxx)
tmp.gen <- gsub("(.*?) (.*)", "\\1", df$`New Species ID`)
tmp.gen <- genus.key[match(toupper(tmp.gen), toupper(genus.key$genus.long)), "genus.short"]
tmp.spc <- toupper(gsub("(.*?) (.{3}).*", "\\2", df$`New Species ID`))
df$`New Species ID` <- paste0(tmp.gen, ".", tmp.spc)
# Random data clean-ups go here
if (grepl("Semakau", file.name[i])){
df[is.na(df$`Transect #`), "Transect #"] <- 5
}
# Some files have inconsistent site names. Fix those
if (length(unique(df$Site))!= 1){
df$Site <- df$Site[1]
}
if (length(unique(df$Depth))!=1){
df$Depth <- df$Depth[1]
}
sitename <- unique(df$Site)
depth <- unique(df$Depth)
# Summarize the data needed
temp <- df %>%
group_by(transect = `Transect #`, species = `New Species ID`) %>%
summarise(length = sum(Length))
# Melt it into a matrix
data <- dcast(temp, transect ~ species, value.var = "length")
data$site <- sitename
data$depth <- depth
data[is.na(data)] <- ""
# For the first obs, use rbind. Subsequently merge the dataset
if (i == 1) {
primerdata.allspecies <- rbind(primerdata.allspecies,data)
} else{
primerdata.allspecies <- merge(primerdata.allspecies, data, all.x = TRUE, all.y = TRUE)
}
}
primerdata.allspecies[is.na(primerdata.allspecies)] <- ""
# Add empty column and label column
primerdata.allspecies$` ` <- " "
primerdata.allspecies$"No." <- 1:nrow(primerdata.allspecies)
# Add Column for seawall and reef
primerdata.allspecies$type <- ifelse(grepl("Kusu", primerdata.allspecies$site) | grepl("Hantu", primerdata.allspecies$site) |
grepl("Sisters", primerdata.allspecies$site) | grepl("Sultan", primerdata.allspecies$site), "Reefs",
"Seawalls")
# Rearrange the columns
primerdata.allspecies.ord <- primerdata.allspecies %>%
select(No., "POR.SP.", POD.CRU:HYD.RIG, ` `, transect, site, depth, type)
primerdata.allspecies.ord <- primerdata.allspecies.ord[, -grep("NA", names(primerdata.allspecies.ord))]
write.xlsx(primerdata.allspecies.ord, "../primerdata_allspecies.xlsx", row.names = FALSE)
